version: '3.8'

services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile
    image: nodeapp
    environment:
      - PORT=${PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_HOST=${DB_HOST}
    volumes:
      - ".:/app"
      - /app/node_modules
    ports:
      - 80:${PORT}
    # depends_on:
    #   - db
    depends_on:
      db:
        condition: service_healthy
        restart: true
    networks:
      - pgnodeapp
    command: sh -c './wait-for db:5432 -- npm run build-start'
    # command: ["./wait-for-it.sh", "db:5432", "--", "python", "app.py"]

  db:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      pgnodeapp:
        aliases:
          - "postgres"

volumes:
  postgres-db:


networks:
  pgnodeapp:
    driver: bridge
